info:
  app:
    name: ${spring.application.name}

spring:
  application:
    name: div-cms
  resources:
    static-locations:
  jackson:
    deserialization:
      ACCEPT_SINGLE_VALUE_AS_ARRAY: true
    serialization:
      FAIL_ON_EMPTY_BEANS: false

server:
  port: 4010

idam:
  client:
    redirect_uri: ${IDAM_API_REDIRECT_URL:http://localhost:8080/authenticated}
    id: divorce
    secret: ${AUTH2_CLIENT_SECRET:dummysecret}
  api:
    url: ${IDAM_API_BASEURL:http://localhost:4503}
    redirect-url: ${IDAM_API_REDIRECT_URL:http://localhost:8080/authenticated}
  caseworker:
    username: ${IDAM_CASEWORKER_USERNAME:dummycaseworker@test.com}
    password: ${IDAM_CASEWORKER_PASSWORD:dummy}
  s2s-auth:
    microservice: ${AUTH_PROVIDER_SERVICE_CLIENT_MICROSERVICE:divorce_ccd_submission}
    totp_secret: ${AUTH_PROVIDER_SERVICE_CLIENT_KEY:AZBYCXDWEVFUGTHS}
    url: ${AUTH_PROVIDER_SERVICE_CLIENT_BASEURL:http://localhost:4502}
    port: ${AUTH_PROVIDER_SERVICE_CLIENT_PORT:4502}
    health:
        context-path: ${AUTH_PROVIDER_SERVICE_CLIENT_HEALTH_CONTEXT_PATH:/health}

ccd:
  jurisdictionid: DIVORCE
  casetype: DIVORCE
  eventid:
    create: create
    createhwf: hwfCreate
  bulk:
      casetype: DIVORCE_BulkAction
      eventid:
          create: scheduleCreate
  server:
    port: 4452
    health:
      context-path: /status/health

core_case_data:
  api:
    url: ${CASE_DATA_STORE_BASEURL:http://localhost:4452}

draft:
  delete:
    async: true
  store:
    api:
      baseurl: ${DRAFT_STORE_API_BASEURL:http://localhost:4601}
      document:
        type:
          divorceFormat: divorcedraft
          ccdFormat: divorcedraftccdformat
      max:
        age: 150
      encryption:
        key:
          template: "%s_%s"
          value: ${DRAFT_STORE_API_ENCRYPTION_KEY_VALUE:9VQKhID861AdxWWv1zlI}

case:
  formatter:
    service:
      api:
        baseurl: ${CASE_FORMATTER_SERVICE_API_BASEURL:http://localhost:4011}

auth2:
  client:
    id: divorce
    secret: ${AUTH2_CLIENT_SECRET:dummysecret}

http:
  connect:
    timeout: 60000
    request:
      timeout: 60000

health:
    check:
        http:
            connect:
                timeout: 5000
                request:
                    timeout: 5000

documentation:
  swagger:
    enabled: true

# GENERAL SPRING BOOT ACTUATOR CONFIG
# Context path for Spring Boot Actuator endpoints
# Allow actuator endpoints to be accessed without requiring authentication
# Enable default health indicators
# Enable disk space health check
management:
  endpoint:
    health:
      show-details: "ALWAYS"
      cache:
        time-to-live: 4000
  endpoints:
    web:
      base-path: /
      path-mapping:
        health: health
      exposure:
        include: info, health, metrics

logging:
  level:
    org.springframework.web: ERROR
    uk.gov.hmcts.reform.divorce.casemaintenanceservice: DEBUG
  pattern:
    console: "%d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n"
