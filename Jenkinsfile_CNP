#!groovy
import uk.gov.hmcts.contino.AppPipelineDsl

properties([
    [
        $class: 'GithubProjectProperty',
        displayName: 'Divorce Case Maintenance Service',
        projectUrlStr: 'https://github.com/hmcts/div-case-maintenance-service'
    ],
    pipelineTriggers([
        [$class: 'GitHubPushTrigger']
    ])
])

@Library("Infrastructure")

def type = "java"
def product = "div"
def component = "cms"

def secrets = [
    'div-${env}': [
        secret("idam-secret", "AUTH_IDAM_CLIENT_SECRET"),
        secret("ccd-submission-s2s-auth-secret", "AUTH_PROVIDER_SERVICE_CLIENT_KEY"),
        secret("idam-secret", "AUTH2_CLIENT_SECRET"),
        secret("draft-store-api-encryption-key", "DRAFT_STORE_API_ENCRYPTION_KEY_VALUE"),
        secret("AppInsightsInstrumentationKey", "azure.application-insights.instrumentation-key"),
        secret("idam-caseworker-username", "IDAM_CASEWORKER_USERNAME"),
        secret("idam-caseworker-password", "IDAM_CASEWORKER_PASSWORD"),
    ]
]


static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

// Vars for Kubernetes
env.PACT_BROKER_FULL_URL = 'https://pact-broker.platform.hmcts.net'

withPipeline(type , product, component) {

    enableAksStagingDeployment()
    loadVaultSecrets(secrets)
    disableLegacyDeployment()

    afterSuccess('checkout') {
        echo '${product}-${component} checked out'
    }

    before('functionalTest:aat') {
        env.test_environment = 'aat'
    }

    afterSuccess('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    // Kubernetes does not retrieve variables from the output terraform
    before('functionalTest:preview') {
        env.test_environment = 'aat'
    }

    afterSuccess('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    onMaster() {
        enablePactAs([AppPipelineDsl.PactRoles.CONSUMER])
    }
    onPR() {
        enablePactAs([AppPipelineDsl.PactRoles.CONSUMER])
    }
}
